<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Mas.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAN
        RAAADUQBg7YmTAAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAA3pSURBVHhe7d1N
        q61lAcbxCx1FokG+DArFd82voGnYy6hxSKPK7CMUoiRqQioOfEUaRBL0AYK0rEZ+AikLNa18pbJJhtrA
        4jks4XBzd9z7nP2ynnX9fvAHca299noGel/n7LXXSoBdd0WSbyd5PMmvk7yU5J9J/pPkg80/L/9uue2x
        JLcmuXx8EABg+12b5L4kryb572n2SpIfJLlmfHAAYLtcn+Tnk8P8THsuyVfHbwYAHK+rkzw7ObgPul8m
        uXL85gDA0ToryR1J3p8c1ofV8r1u33xvAOCIXbR54d54QB9Vy98GXDA+KQDg8Fya5MXJoXzULS8U9CMB
        ADgC1yV5e3IYH1dvbZ4TAHBIPpvkL5ND+Lh7Pckl45MFAM7cOUlemBy+29LvN88RADhAT00O3W3rZ+OT
        BgBO39cnh+22dsv45AGA/Ts3yZuTg3ZbW16g+KnxIgCA/Xlocshuew+MFwEA7N35Sd6dHLDb3vKcvUkQ
        AJymeyeH61q6Z7wYAODjLe+1/9rkYF1LbyQ5e7woAODUvjI5VNfWF8eLAgBO7fHJgbq2HhkvCgA4tT9O
        DtS1tbw7IACwRxdODtM19qHfBgCAvbtpcpiutRvGiwMA5r4zOUjX2q3jxQEAc3dNDtK1dud4cQDA3IOT
        g3St3T9eHAAw98TkIF1ry7UAAHvw5OQgXWvLtQAAe2AAAEAhAwAAChkAAFDIAACAQgYAABQyAACgkAEA
        AIUMAAAoZAAAQCEDAAAKGQAAUMgAAIBCBgAAFDIAAKCQAQAAhQwAAChkAABAIQMAAAoZAABQyAAAgEIG
        AAAUMgAAoJABAACFDAAAKGQAAEAhAwAAChkAAFDIAACAQgYAABQyAACgkAEAAIUMAAAoZAAAQCEDAAAK
        GQAAUMgAAIBCBgAAFDIAAKCQAQAAhQwAAChkAABAIQMAAAoZAABQyAAAgEIGAAAUMgAAoJABAACFDAAA
        KGQAAEAhAwAAChkAAFDIAACAQgYAABQyAACgkAEAAIUMAAAoZAAAQCEDAAAKGQAAUMgAAIBCBgAAFDIA
        AKCQAQAAhQwAAChkAABAIQMAAAoZAABQyAAAgEIGAAAUMgAAoJABAACFDAAAKGQAAEAhAwAAChkAAFDI
        AACAQgYAABQyAACgkAEAAIUMAAAoZAAAQCEDAAAKGQAAUMgAAIBCBgAAFDIAAKCQAQAAhQwAAChkAABA
        IQMAAAoZAABQyAAAgEIGAAAUMgAAoJABAACFDAAAKGQAAEAhAwAAChkAAFDIAACAQgYAABQyAACgkAEA
        AIUMAAAoZAAAQCEDAAAKGQAAUMgAAIBCBgAAFDIAAKCQAQAAhQwAAChkAABAIQMAAAoZAABQyAAAgEIG
        AAAUMgAAoJABAACFDAAAKGQAAEAhAwAAChkAAFDIAACAQgYAABQyAACgkAEAAIUMAAAoZAAAQCEDAAAK
        GQAAUMgAAIBCBgAAFDIAAKCQAQAAhQwAAChkAABAIQMAAAoZAABQyAAAgEIGAAAUMgAAoJABAACFDAAA
        KGQAAEAhAwAAChkAAFDIAACAQgYAABQyAACgkAEAAIUMAAAoZAAAQCEDAAAKGQAAUMgAAIBCBgAAFDIA
        AKCQAQAAhQwAAChkAABAIQMAAAoZAABQyAAAgEIGAAAUMgAAoJABAACFDAAAKGQAAEAhAwAAChkAAFDI
        AACAQgYAABQyAACgkAEAAIUMAAAoZAAAQCEDAAAKGQAAUMgAAIBCBgAAFDIAAKCQAQAAhQwAAChkAABA
        IQMAAAoZAABQyAAAgEIGAAAUMgAAoJABAACFDAAAKGQAAEAhAwAAChkAAFDIAACAQgYAABQyAACgkAEA
        AIUMAAAoZAAAQCEDAAAKGQDA6lyY5KYktyX5fpL7N/8DkLT3XpgcpGttuZbx+iSduuXsXM7Q5Sy9MckF
        42G7Dc5O8pUkjyf5w+Q/fkmSdOYtY/rRJF/anL3HZvmT/r1J3pg8SUmSdHi9nuSeo/6bgU8leSjJvydP
        SJIkHV3LWfxgkvPGw/qgfT3J25MnIEmSjq+3ktwyHtoH4ZwkP518Q0mStD09tTmzD8QlO/aKZEmSdrnf
        Jbl4PMz367rNCw3GB5ckSdvba5sz/LRcvvmZwvigkiRp+/tbkqvGw/3jXJTkT5MHkyRJ6+nl/fyq4FlJ
        fjV5EEmStL5+u9c3Drpj8sWSJGm93T4e9qMrk7w/+UJJkrTePkhy9Xjon+zZyRdJkqT198x46H/kC5M7
        S5Kk3enz4+G/8Kd/SZJ2u1+Oh/+1kztJkqTd65qTB8B9kztIkqTd696TB8CrkztIkqTda3mjvxOumNwo
        SZJ2t0uXAfDtyQ2SJGl3+9YyAB6f3CBJkna3R5YB8JvJDZIkaXdbPvMnr0xukCRJu9vyKYF5Z3KDJEna
        3f6+DIDlAwLGGyRJ0u62fPCfASBJUlknBoAfAUiS1NWJHwF4EaAkSV2deBHgryc3SJKk3e3EpwI+NrlB
        kiTtbg8vA+DWyQ2SJGl3++YyAC6f3CBJkna3Ex8G5IWAkiT1dOIFgB+5b3IHSZK0e91z8gC4ZnIHSZK0
        e1198gBYPDu5kyRJ2p2eGQ//xU2TO0qSpN3phvHw/8jyxgDjnSVJ0vr7xXjon+yKJO9NvkiSJK235cN/
        rhoP/dHtky+UJEnr7bvjYT9zlh8FSJK0Mz29Odv35IIkL00eRJIkracXk5w/HvIf57Ikb00eTJIkbX9/
        S3LleLjv1XVJXps8qCRJ2t7+muRz46G+Xxcn+f3kwSVJ0vb1fJLPjof56fpEkh9NvokkSdqenkryyfEQ
        Pwi3JHlz8g0lSdLx9UaSr42H9kE7L8kDSd6dPAFJknR0LWfx/UnOHQ/rw7T8quDykYKvT56QJEk6vJYX
        6N99Or/id5CWNxf4UpJHvVhQkqRDazljH05y837e2OcoLWvk80luTXJnkh8meVLSvnph8h//WluuZbw+
        SaduOTuXM3Q5S5dP8Pv0eNgCu2n5H8B4kK615VoAgD0wAACgkAEAAIUMAAAoZAAAQCEDAAAKGQAAUMgA
        AIBCBgAAFDIAAKCQAQAAhQwAAChkAABAIQMAAAoZAABQyAAAgEIGAAAUMgAAoJABAACFDAAAKGQAAEAh
        AwAAChkAAFDIAACAQgYAABQyAACgkAEAAIUMAAAoZAAAQCEDAAAKGQAAUMgAAIBCBgAAFDIAAKCQAQAA
        hQwAAChkAABAIQMAAAoZAABQyAAAgEIGAAAUMgAAoJABAACFDAAAKGQAAEAhAwAAChkAAFDIAACAQgYA
        ABQyAACgkAEAAIUMAAAoZAAAQCEDAAAKGQAAUMgAAIBCBgAAFDIAAKCQAQAAhQwAAChkAABAIQMAAAoZ
        AABQyAAAgEIGAAAUMgAAoJABAACFDAAAKGQAAEAhAwAAChkAAFDIAACAQgYAABQyAACgkAEAAIUMAAAo
        ZAAAQCEDAAAKGQAAUMgAAIBCBgAAFDIAAKCQAQAAhQwAAChkAABAIQMAAAoZAABQyAAAgEIGAAAUMgAA
        oJABAACFDAAAKGQAAEAhAwAAChkAAFDIAACAQgYAABQyAACgkAEAAIUMAAAoZAAAQCEDAAAKGQAAUMgA
        AIBCBgAAFDIAAKCQAQAAhQwAAChkAABAIQMAAAoZAABQyAAAgEIGAAAUMgAAoJABAACFDAAAKGQAAEAh
        AwAAChkAAFDIAACAQgYAABQyAACgkAEAAIUMAAAoZAAAQCEDAAAKGQAAUMgAAIBCBgAAFDIAAKCQAQAA
        hQwAAChkAABAIQMAAAoZAABQyAAAgEIGAAAUMgAAoJABAACFDAAAKGQAAEAhAwAAChkAAFDIAACAQgYA
        ABQyAACgkAEAAIUMAAAoZAAAQCEDAAAKGQAAUMgAAIBCBgAAFDIAAKCQAQAAhQwAAChkAABAIQMAAAoZ
        AABQyAAAgEIGAAAUMgAAoJABAACFDAAAKGQAAEAhAwAAChkAAFDIAACAQgYAABQyAACgkAEAAIUMAAAo
        ZAAAQCEDAAAKGQAAUMgAAIBCBgAAFDIAAKCQAQAAhQwAAChkAABAIQMAAAoZAABQyAAAgEIGAAAUMgAA
        oJABAACFDAAAKGQAAEAhAwAAChkAAFDIAACAQgYAABQyAACgkAEAAIUMAAAoZAAAQCEDAAAKGQAAUMgA
        AIBCBgAAFDIAAKCQAQAAhQwAACj0xOQgXWvLtQAAe/Dg5CBda/ePFwcAzN01OUjX2p3jxQEAc7dNDtK1
        9q3x4gCAuRsnB+lau368OABg7sLJQbrGPkxy/nhxAMD/94fJgbq2fjdeFABwao9NDtS19fB4UQDAqX15
        cqCurZvHiwIATu2sJK9NDtW19HqSs8eLAgA+3j2Tg3Ut3T1eDACwN59O8q/J4brtvZvkgvFiAIC9W+Pb
        Av9wvAgAYH/OTfLG5JDd1t5Kct54EQDA/t0yOWi3ta+NTx4AOH0/mRy229aPxycNAJyZczbvrDceutvS
        80k+OT5pAODMfSbJnyeH73G3/M7/xeOTBQAOznWbF9qNh/BxtTyXz41PEgA4eJcmeXFyGB91f0py5fjk
        AIDDs7zRzq8mh/JR9bSP+gWA47F8XsDtSd6fHNCH1XtJvrf53gDAMVr+Gv6ZyWF90P0iyRXjNwcAjtf1
        SX6e5MPJ4X0mPeejfQFg+12T5N7Ni/TGw3yvvbx5jKvHBwcAtt9lSb6Z5NHNiwaX3x54J8kHm/6x+XfL
        bct9vrH5LQNgh/0PEy9xTOP7+wgAAAAASUVORK5CYII=
</value>
  </data>
</root>